# Calculer l'inertie totale du nuage de points
inertie_totale <- sum(dcr^2)
print(inertie_totale)  # Doit être proche de 27
data <- read.csv("~/Louison/M1/ADM/DM1/data/Datagenus.csv", sep=";")
str(data)
summary(data)
nblignes <- nrow(data)
head(data)
#Densité totale de la parcelle
data$densite <- rowSums(data[,2:28])/data$surface
# Sélectionner les colonnes des espèces
species_cols <- paste0("gen", 1:27)
# Calculer la densité de peuplement pour chaque espèce
data[species_cols] <- data[species_cols] / data$surface
head(data[species_cols])
data <- read.csv("~/Louison/M1/ADM/DM1/data/Datagenus.csv", sep=";")
str(data)
apply(scaled_data, 2, var)
apply(dcr, 2, var)
data <- read.csv("~/Louison/M1/ADM/DM1/data/Datagenus.csv", sep=";")
str(data)
summary(data)
nblignes <- nrow(data)
head(data)
#Densité totale de la parcelle
data$densite <- rowSums(data[,2:28])/data$surface
# Sélectionner les colonnes des espèces
species_cols <- paste0("gen", 1:27)
# Calculer la densité de peuplement pour chaque espèce
data[species_cols] <- data[species_cols] / data$surface
head(data[species_cols])
#Centrer-réduire les densités
dcr <- scale(data[species_cols],center=TRUE,scale=TRUE)
head(dcr)
summary(dcr)
#Vérif des moyennes et écarts-types :
ecarts_types_cr <- apply(dcr, 2, sd)
print(ecarts_types_cr)  # Tous les écarts types devraient être proches de 1
col_means <- colMeans(dcr)
print(col_means)  # Toutes les moyennes doivent être proches de 0
# Calculer l'inertie totale du nuage de points
inertie_totale <- sum(dcr^2)
print(inertie_totale)  # Doit être proche de 27
head(dcr)
apply(dcr, 2, var)
apply(dcr, 2, var)
# Calculer l'inertie totale du nuage de points
inertie_par_ligne <- apply(dcr, 1, function(x) sum(x^2))
print(inertie_par_ligne)
head(dcr)
# Calculer l'inertie totale du nuage de points
# Supposons que dcr soit la matrice des données centrées-réduites
n <- nrow(dcr)  # Nombre de lignes
inertie_par_ligne <- numeric(n)  # Initialiser un vecteur pour stocker les inerties
# Boucle pour calculer l'inertie de chaque ligne
for (i in 1:n) {
inertie_par_ligne[i] <- sum(dcr[i, ]^2)  # Somme des carrés des éléments de la ligne i
}
inertie_par_ligne
# Calculer l'inertie totale du nuage de points
inertie_totale <- sum(dcr^2)
print(inertie_totale)  # Doit être proche de 27
# Calculer l'inertie totale du nuage de points
inertie_totale <- sum(dcr^2) / 1000
print(inertie_totale)  # Doit être proche de 27
# Calculer l'inertie totale du nuage de points
inertie_totale <- sum(dcr^2) / nrow(dcr)
print(inertie_totale)  # Doit être proche de 27
# Calculer l'inertie totale du nuage de points
inertie_totale <- sum(dcr^2) / nrow(dcr)-1
print(inertie_totale)  # Doit être proche de 27
# Calculer l'inertie totale du nuage de points
inertie_totale <- sum(dcr^2) / nrow(dcr)+1
print(inertie_totale)  # Doit être proche de 27
# Calculer l'inertie totale du nuage de points
nrow(dcr)
inertie_totale <- sum(dcr^2) / nrow(dcr)-1
print(inertie_totale)  # Doit être proche de 27
inertie_totale <- sum(dcr^2) / (nrow(dcr)-1)
print(inertie_totale)  # Doit être proche de 27
head(dcr)
summary(dcr)
View(dcr)
# Sélectionner les colonnes des espèces
species_cols <- paste0("gen", 1:27)
species_cols
# Calculer la densité de peuplement pour chaque espèce
data[species_cols] <- data[species_cols] / data$surface
head(data[species_cols])
head(data)
nblignes <- nrow(data)
nrow(data)
View(data)
View(data)
#Densité totale de la parcelle
data$densite <- rowSums(data[1:1000,2:28])/data$surface
#Densité totale de la parcelle
data$densite <- rowSums(data[1:1000,2:28])/data$surface[1:1000,]
#Densité totale de la parcelle
data$surface
#Densité totale de la parcelle
data2 <- data[1:1000,]
View(data2)
#Densité totale de la parcelle
data <- data1[1:1000,]
data
data$densite <- rowSums(data[,2:28])/data$surface[1:1000,]
#Densité totale de la parcelle
data <- data1[1:1000,]
data1 <- read.csv("~/Louison/M1/ADM/DM1/data/Datagenus.csv", sep=";")
str(data)
summary(data)
nrow(data)
head(data)
#Densité totale de la parcelle
data <- data1[1:1000,]
data$densite <- rowSums(data[,2:28])/data$surface[1:1000,]
#Densité totale de la parcelle
data <- data1[1:1000,]
data$densite <- rowSums(data[,2:28])/data$surface[1:1000,]
data$densite <- rowSums(data[,2:28])/data$surface
# Sélectionner les colonnes des espèces
species_cols <- paste0("gen", 1:27)
species_cols
# Calculer la densité de peuplement pour chaque espèce
data[species_cols] <- data[species_cols] / data$surface
head(data[species_cols])
#Centrer-réduire les densités
dcr <- scale(data[species_cols],center=TRUE,scale=TRUE)
head(dcr)
summary(dcr)
#Vérif des moyennes et écarts-types :
ecarts_types_cr <- apply(dcr, 2, sd)
print(ecarts_types_cr)  # Tous les écarts types devraient être proches de 1
col_means <- colMeans(dcr)
print(col_means)  # Toutes les moyennes doivent être proches de 0
# Calculer l'inertie totale du nuage de points
nrow(dcr)
inertie_totale <- sum(dcr^2)
print(inertie_totale)  # Doit être proche de 27
ecarts_types_cr  # Tous les écarts types devraient être proches de 1
colMeans(dcr)  # Toutes les moyennes doivent être proches de 0
# Calculer l'inertie totale du nuage de points
inertie_totale <- sum(dcr^2)
print(inertie_totale)  # Doit être proche de 27
inertie_totale  # Doit être proche de 27
head(dcr)
sum(dcr[1,])
sum(dcr[2,])
sum(dcr[1,]^2)
sum(dcr[2,]^2)
colMeans(dcr)  # Toutes les moyennes doivent être proches de 0
data1 <- read.csv("~/Louison/M1/ADM/DM1/data/Datagenus.csv", sep=";")
#Densité totale de la parcelle
data <- data1[1:1000,]
data$densite <- rowSums(data[,2:28])/data$surface
# Sélectionner les colonnes des espèces
species_cols <- paste0("gen", 1:27)
species_cols
# Calculer la densité de peuplement pour chaque espèce
data[species_cols] <- data[species_cols] / data$surface
head(data[species_cols])
#Centrer les densités
densite_cr <- data [especes]
data1 <- read.csv("~/Louison/M1/ADM/DM1/data/Datagenus.csv", sep=";")
# Densité totale de la parcelle (inutile ici)
data <- data1[1:1000,]
data$densite <- rowSums(data[,2:28])/data$surface
# Sélectionner les colonnes des espèces
especes <- paste0("gen", 1:27)
especes
# Calculer la densité de peuplement pour chaque espèce
data[especes] <- data[especes] / data$surface
#Centrer les densités
densite_cr <- data [especes]
for (i in 1:27) {
densite_cr[,i] <- densite_cr[,i] - mean(densite_cr[,1:27])
}
densite_cr[,1:27]
#Centrer les densités
densite_cr <- data [especes]
densite_cr[,1:27]
for (i in 1:27) {
densite_cr[,i] <- densite_cr[,i] - mean(densite_cr[,1:27])
}
densite_cr[,1:27]
densite_cr[,i] <- densite_cr[,i] - mean(densite_cr[,1:27])
#Centrer les densités
densite_cr <- data [especes]
densite_cr[,1:27]
View(densite_cr)
# Densité totale de la parcelle (inutile ici)
data <- data1[1:1000,]
# Calculer la densité de peuplement pour chaque espèce
data_especes <- data[especes] / data$surface
# Moyenne des densités par parcelles
data$densite_moyenne <- mean(data[especes])
# Moyenne des densités par parcelles
data$densite_moyenne <- mean(data_especes)
data_especes
# Moyenne des densités par parcelles
data$densite_moyenne <- mean(data_especes[,])
# Moyenne des densités par parcelles
for (i in nrow(data_especes)){
data$densite_moyenne[i,] <- mean(data_especes[i,])
}
data$densite_moyenne[i,] <- mean(data_especes[i,],na.rm=true)
# Calculer la densité de peuplement pour chaque espèce
data_especes <- data[especes] / data$surface
data_especes
# Moyenne des densités par parcelles
data$densite_moyenne <- rowMeans(data_especes)
data$densite_moyenne
# Moyenne des densités par parcelles
data_densite_especes$densite_moyenne <- rowMeans(data_densite_especes)
data1 <- read.csv("~/Louison/M1/ADM/DM1/data/Datagenus.csv", sep=";")
# Densité totale de la parcelle (inutile ici)
data <- data1[1:1000,]
data$densite <- rowSums(data[,2:28])/data$surface
# Sélectionner les colonnes des espèces
especes <- paste0("gen", 1:27)
# Calculer la densité de peuplement pour chaque espèce
data_densite_especes <- data[especes] / data$surface
data_densite_especes
# Moyenne des densités par parcelles
data_densite_especes$densite_moyenne <- rowMeans(data_densite_especes)
head(data_densite_especes)
View(data_densite_especes)
data1 <- read.csv("~/Louison/M1/ADM/DM1/data/Datagenus.csv", sep=";")
# Densité totale de la parcelle (inutile ici)
data <- data1[1:1000,]
# Sélectionner les colonnes des espèces
especes <- paste0("gen", 1:27)
especes
# Calculer la densité de peuplement pour chaque espèce
data_densite_especes <- data[especes] / data$surface
View(data_densite_especes)
View(data_densite_especes)
data1 <- read.csv("~/Louison/M1/ADM/DM1/data/Datagenus.csv", sep=";")
# On enlève la ligne 1001
data <- data1[1:1000,]
str(data)
Datagenus <- read.csv("~/Louison/M1/ADM/DM1/data/Datagenus.csv", sep=";")
# On enlève la ligne 1001
data <- Datagenus[1:1000,]
summary(data)
nrow(data)
head(data)
# Sélectionner les colonnes des espèces
especes <- paste0("gen", 1:27)
# Calculer la densité de peuplement pour chaque espèce
data_densite_especes <- data[especes] / data$surface
head(data_densite_especes)
Datagenus <- read.csv("~/Louison/M1/ADM/DM1/data/Datagenus.csv", sep=";")
data2 <- Datagenus[1 :1000,] #On enlève la ligne qui pose problème
# Sélectionner les colonnes des espèces
espece <- paste0("gen", 1:27)
# Calculer la densité de peuplement pour chaque espèce
densité <- data2[espece] / data$surface
View(densité)
Datagenus <- read.csv("~/Louison/M1/ADM/DM1/data/Datagenus.csv", sep=";")
# On enlève la ligne 1001
data <- Datagenus[1:1000,]
# Sélectionner les colonnes des espèces
especes <- paste0("gen", 1:27)
# Calculer la densité de peuplement pour chaque espèce
data_densite_especes <- data[especes] / data$surface
head(data_densite_especes)
summary(data)
#Centrer les densités
densite_cr <- data_especes
#Centrer les densités
densite_cr <- densite_especes / densite_especes$densite_moyenne
# Calculer la densité de peuplement pour chaque espèce
densite_especes <- data[especes] / data$surface
# Moyenne des densités par parcelles
densite_especes$densite_moyenne <- rowMeans(densite_especes)
head(densite_especes)
#Centrer les densités
densite_cr <- densite_especes / densite_especes$densite_moyenne
head(densite_cr)
summary(densite_cr)
#Centrer les densités
densite_cr <- densite_especes - densite_especes$densite_moyenne
summary(densite_cr)
head(densite_especes)
#Centrer les densités
densite_cr <- densite_especes - densite_especes$densite_moyenne
head(densite_cr)
#Centrer les densités
#densite_cr <- densite_especes - densite_especes$densite_moyenne
data_centered <- densite_especes
for(i in 1:ncol(data_centered)) {
data_centered[, i] <- data_centered[, i] - mean(data_centered[, i], na.rm = TRUE)
}
head(densite_centered)
head(data_centered)
summary(data_centered)
densite_cr <- densite_especes - densite_especes$densite_moyenne
head(densite_cr)
rowMeans(densite_cr)
# Calculer la densité de peuplement pour chaque espèce
densite_especes <- data[especes] / data$surface
head(densite_especes)
# Moyenne des densités par parcelle
densite_especes$densite_moyenne <- rowMeans(densite_especes)
head(densite_especes)
# Ecart-type des densités par parcelle
densite_especes$variance <- ((densite_especes - densite_especes$densite_moyenne)^2)/ 27
head(densite_especes)
# Lecture des données
data <- read.csv("~/Louison/M1/ADM/DM1/data/Datagenus.csv", sep = ";", encoding = "UTF-8")
# Sélection des colonnes : espèces (gen1 à gen27), surface, forêt, géologie
colonnes_selectionnees <- c(paste0("gen", 1:27), "surface", "forest", "geology")
donnees_filtrees <- data[, colonnes_selectionnees]
# 1. Calcul de la densité de peuplement pour chaque espèce (gen1 à gen27)
# On divise le nombre d'individus d'une espèce par la surface de la parcelle pour obtenir la densité
densite_peuplement <- as.matrix(donnees_filtrees[, paste0("gen", 1:27)]) / donnees_filtrees$surface
print("Calcul de la densité de peuplement terminé")
# Calcul des moyennes pour chaque colonne (espèce)
moyennes_especes <- colMeans(densite_peuplement)
# Calcul des écarts-types pour chaque colonne (espèce)
n <- nrow(densite_peuplement)
ecarts_types_especes <- sqrt(colSums((densite_peuplement - matrix(moyennes_especes, nrow = n, ncol = ncol(densite_peuplement), byrow = TRUE))^2) / (n - 1))
# Centrage et réduction : on soustrait les moyennes et on divise par l'écart-type
densite_centree_reduite <- (densite_peuplement - matrix(moyennes_especes, nrow = n, ncol = ncol(densite_peuplement), byrow = TRUE)) /
matrix(ecarts_types_especes, nrow = n, ncol = ncol(densite_peuplement), byrow = TRUE)
print("Centrage et réduction des densités terminé")
# 3. Vérification : Barycentre à l'origine
# Vérification si les moyennes des colonnes centrées-réduites sont proches de zéro
moyennes_apres_centrage <- colMeans(densite_centree_reduite)
barycentre_a_l_origine <- all(abs(moyennes_apres_centrage) < 1e-10)
print(paste("Le barycentre est-il à l'origine ? :", barycentre_a_l_origine))
# 4. Vérification : Inertie totale
# Calcul des variances après centrage et réduction (elles devraient être proches de 1)
variances_apres_centrage <- colSums(densite_centree_reduite^2) / (n - 1)
# Inertie totale = somme des variances
inertie_totale <- sum(variances_apres_centrage)
print(paste("Inertie totale (somme des variances) :", inertie_totale))
# Identification des types forestiers
types_forestiers <- unique(donnees_filtrees$forest)
# Création d'une matrice pour les poids, barycentres et normes euclidiennes carrées
poids_forestiers <- numeric(length(types_forestiers))
barycentres_forestiers <- matrix(0, nrow = length(types_forestiers), ncol = ncol(densite_centree_reduite))
normes_euclidiennes_carre <- numeric(length(types_forestiers))
# Calcul par opérations matricielles
for (i in 1:length(types_forestiers)) {
# Filtrer les parcelles appartenant à chaque type forestier
parcelles_type_forestier <- densite_centree_reduite[donnees_filtrees$forest == types_forestiers[i], ]
# Calculer le poids : proportion des parcelles de ce type
poids_forestiers[i] <- nrow(parcelles_type_forestier) / nrow(densite_centree_reduite)
# Calcul du barycentre pour chaque type forestier (moyenne par espèce)
barycentres_forestiers[i, ] <- colMeans(parcelles_type_forestier)
# Calcul de la norme euclidienne carrée pour chaque type forestier
normes_euclidiennes_carre[i] <- sum(barycentres_forestiers[i, ]^2)
}
# Affichage des résultats
print("Poids des types forestiers :")
print(poids_forestiers)
# Lecture des données
data <- read.csv("~/data/Datagenus.csv", sep = ";", encoding = "UTF-8")
# Lecture des données
data <- read.csv("/data/Datagenus.csv", sep = ";", encoding = "UTF-8")
# Lecture des données
data <- read.csv("\data\Datagenus.csv", sep = ";", encoding = "UTF-8")
# Lecture des données
data <- read.csv("~/Louison/M1/ADM/DM1/data/Datagenus.csv", sep = ";", encoding = "UTF-8")
# Lecture des données
data <- read.csv("data/Datagenus.csv", sep = ";", encoding = "UTF-8")
